{"version":3,"sources":["components/Nav2.js","components/TodoForm.js","components/TodoRows.js","components/TodoTask.js","components/TodoApp.js","App.js","index.js"],"names":["Nav2","className","initialForm","task","comment","completed","id","TodoForm","createTask","taskEdit","updateTask","setTaskEdit","useState","form","setForm","sucess","setSucess","useEffect","handleChange","e","target","name","value","onSubmit","preventDefault","setTimeout","alert","onChange","required","type","placeholder","cols","rows","style","display","onClick","fontSize","background","border","color","width","margin","borderRadius","fontWeight","TodoRows","byTask","todoDelete","toggleTaskCompleted","TodoTask","taskItems","length","map","initialDb","ls","localStorage","TodoApp","JSON","parse","getItem","setTaskItems","setItem","stringify","data","Date","now","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3ae86be.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Nav2 = () => {\r\n    return (\r\n        <div className=\"card card2 mt-2 hidde \">\r\n        <div className=\"card-body \">\r\n            <h3 className=\"card-title \">\r\n              Task\r\n            </h3>\r\n            <h3 className=\"card-text \">\r\n              Description\r\n            </h3>\r\n            <h3 className=\"card-action\">Actions</h3>\r\n          \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Nav2\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst initialForm = {\r\n    task: \"\",\r\n    comment: \"\",\r\n    completed: false,\r\n    id: null\r\n}\r\n\r\nconst TodoForm = ({ createTask, taskEdit, updateTask, setTaskEdit }) => {\r\n\r\n    const [form, setForm] = useState(initialForm)\r\n\r\n    const [sucess, setSucess] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (taskEdit) {\r\n            setForm(taskEdit)\r\n        } else {\r\n            setForm(initialForm)\r\n        }\r\n    }, [taskEdit])\r\n\r\n    const handleChange = e => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (!form.task || !form.comment) {\r\n            alert(\"Data Empty\")\r\n            return\r\n        }\r\n\r\n\r\n        if (form.id === null) {\r\n            createTask(form)\r\n            setSucess(\"Task Added\")\r\n        } else {\r\n            updateTask(form)\r\n            setSucess(\"Task Edited\")\r\n        }\r\n\r\n        setForm(initialForm)\r\n\r\n        setTimeout(() => {\r\n            setSucess(null)\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <form className=\"form\" onSubmit={handleSubmit} >\r\n\r\n                <input\r\n                    onChange={handleChange}\r\n                    required\r\n                    type=\"text\"\r\n                    className=\"tarea\"\r\n                    placeholder=\"Add task\"\r\n                    name=\"task\"\r\n                    value={form.task}\r\n                />\r\n\r\n                <textarea\r\n                    onChange={handleChange}\r\n                    placeholder=\"Add description\"\r\n                    name=\"comment\"\r\n                    className=\"description\"\r\n                    cols=\"30\"\r\n                    rows=\"3\"\r\n                    value={form.comment}\r\n\r\n                    required></textarea>\r\n\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"button btnAddTask\"\r\n                        value={taskEdit ? \"Update Task\" : \"Add Task\"}\r\n\r\n                    />\r\n                    {\r\n                        taskEdit &&\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"button\"\r\n                            value=\"Reset\"\r\n                            onClick={ ()=>setTaskEdit(null)}\r\n\r\n                        />\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n\r\n\r\n                {sucess && (\r\n\r\n                    <button style={{ fontSize: \"1.5rem\", background: \"transparent\", border: \"1px solid #233e8b\", color: \"#233e8b\", width: \"300px\", margin: \"auto\", borderRadius: \"10px\", fontWeight: \"700\" }}\r\n                        className=\"btn-success mr-2 mt-2\"\r\n\r\n                    > {sucess}\r\n                    </button>)\r\n                }\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React from 'react'\r\n\r\nconst TodoRows = ({ byTask , todoDelete, toggleTaskCompleted,setTaskEdit}) => {\r\nlet {task, comment, id, completed} = byTask\r\n    return (\r\n        <div className=\"card mt-2 \">\r\n            <div className=\"card-body d-flex\">\r\n                <h4 className={`card-title  ${completed ? `line-through`:`nothing`}`}>\r\n                    {task}\r\n\r\n                </h4>\r\n          \r\n                <h5 className={`card-text  ${completed ? `line-through`:`nothing`}`}>\r\n                    {comment}\r\n                </h5>\r\n               \r\n                <div className=\"d-flex justify-content-end \">\r\n                    <button\r\n                        className=\"btn btn-sm btn-success mr-2\"\r\n                        onClick={()=>toggleTaskCompleted(id)}\r\n                    > Finish\r\n                    </button>\r\n                    <button \r\n                        className=\"btn btn-sm btn-outline-primary mr-2\"\r\n                        onClick = {()=>setTaskEdit(byTask)}\r\n                    > Editar\r\n                    </button>\r\n                    <button \r\n                            className=\"btn btn-sm btn-outline-danger\"\r\n                            onClick = {()=>todoDelete(id)}\r\n                    >\r\n                        Eliminar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoRows\r\n","import React from 'react'\r\nimport TodoRows from './TodoRows'\r\n\r\n\r\nconst TodoTask = ({taskItems, todoDelete, toggleTaskCompleted,setTaskEdit}) => {\r\n  \r\n    return (\r\n       <div>\r\n      \r\n               { taskItems.length===0\r\n                ?<div className=\"no-task\">\r\n                    <h2>Add a New Task</h2>\r\n                </div>\r\n                : taskItems.map(byTask=>\r\n                 <TodoRows \r\n                    byTask={byTask} \r\n                    key={byTask.id} \r\n                    todoDelete={todoDelete}\r\n                    toggleTaskCompleted={toggleTaskCompleted}\r\n                    setTaskEdit={setTaskEdit} />)\r\n                }     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoTask\r\n","import React, { useState , useEffect} from 'react'\r\nimport Nav2 from './Nav2'\r\n\r\nimport TodoForm from './TodoForm'\r\nimport TodoTask from './TodoTask'\r\n\r\nconst initialDb = [\r\n    {\r\n        id: 1,\r\n        task: \"Iniciar C#\",\r\n        comment: \"Convertirme en FullStack\",\r\n        completed: false\r\n    }\r\n]\r\nlet ls = localStorage;\r\n\r\nconst TodoApp = () => {\r\n\r\n    const [taskItems, setTaskItems] = useState(JSON.parse(ls.getItem(\"taskItems\"))||initialDb)\r\n\r\n    const [taskEdit, setTaskEdit] = useState(null)\r\n\r\n    useEffect(() => {\r\n       ls.setItem(\"taskItems\",JSON.stringify(taskItems))\r\n    }, [taskItems])\r\n\r\n    const todoDelete = id => {\r\n        setTaskItems(taskItems.filter(task => task.id !== id))\r\n    }\r\n\r\n    const toggleTaskCompleted = id => {\r\n        setTaskItems(taskItems.map(task => \r\n\r\n            task.id === id\r\n                ? {...task, completed: !task.completed}\r\n                : task\r\n\r\n        ))\r\n    }\r\n\r\n\r\n    const createTask = data=>{\r\n        data.id = Date.now()\r\n        setTaskItems([data,...taskItems])\r\n\r\n    }\r\n    const updateTask = taskEdit =>{\r\n\r\n        setTaskItems( taskItems.map(\r\n                task=>task.id===taskEdit.id\r\n                    ? taskEdit\r\n                    : task\r\n                    ))\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n            <div className=\"general\">\r\n                <nav className=\"navbar\">\r\n\r\n                    <div className=\"navbar-link\">Tasks List REACT JS</div>\r\n\r\n                </nav>\r\n\r\n                <div className=\"container\">\r\n                    \r\n                    <TodoForm\r\n                        createTask={createTask}\r\n                        taskEdit ={taskEdit}\r\n                        setTaskEdit={setTaskEdit}\r\n                        updateTask={updateTask}\r\n                    />\r\n                </div>\r\n                <div className=\"nav2\">\r\n                    <Nav2 />\r\n                </div>\r\n                <div className=\"taskList\">\r\n                    <TodoTask\r\n                        taskItems={taskItems}\r\n                        todoDelete={todoDelete}\r\n                        toggleTaskCompleted={toggleTaskCompleted}\r\n                        setTaskEdit={setTaskEdit} />\r\n\r\n                </div>\r\n\r\n\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoApp\r\n","\nimport './App.css';\nimport TodoApp from './components/TodoApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}